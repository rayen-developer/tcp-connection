package com.example.demo;


import org.springframework.integration.annotation.MessageEndpoint;
import org.springframework.integration.annotation.ServiceActivator;
import com.euronext.optiq.dd.FullTradeInformationDecoder;
import com.euronext.optiq.dd.MessageHeaderDecoder;
import org.agrona.DirectBuffer;
import org.agrona.concurrent.UnsafeBuffer;

@MessageEndpoint
public class DemoTcpConsumer {

    @ServiceActivator(inputChannel = "demo-channel")
    public void consume(byte[] bytes) throws InstantiationException, IllegalAccessException {
	final MessageHeaderDecoder headerDecoder = new MessageHeaderDecoder();
	final FullTradeInformationDecoder fullTradeInformationDecoder = new FullTradeInformationDecoder();
	DirectBuffer ahmed = new UnsafeBuffer();
	ahmed.wrap(bytes);
	int bufferOffset = 0;
	headerDecoder.wrap(ahmed, bufferOffset);
	final int actingBlockLength = headerDecoder.blockLength();
	final int actingVersion = headerDecoder.version();
	bufferOffset += headerDecoder.encodedLength();
	fullTradeInformationDecoder.wrap(ahmed, bufferOffset, actingBlockLength, actingVersion);
	System.out.println(fullTradeInformationDecoder.);
	//fullTradeInformationDecoder.wrapAndApplyHeader(ahmed,0, headerDecoder);
	//System.out.println(fullTradeInformationDecoder.buffer());
	//fullTradeInformationDecoder.wrapAndApplyHeader(rayen, fullTradeInformationDecoder.offset(), headerDecoder);
       //System.out.println(headerDecoder.templateId());
	//System.out.println(new String(bytes));
    }
}
